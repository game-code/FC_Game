{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\player/assets\\script\\player\\Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\player","sourcesContent":["import PlayerLogic from \"./PlayerLogic\";\r\nimport Zidan from \"../weapon/zidan\";\r\nimport AudioManager from \"../AudioManager\";\r\nimport { AudioType } from \"../Config\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Player extends cc.Component {\r\n\r\n    @property(cc.Prefab) playerZidanPre: cc.Prefab = null;\r\n    @property(cc.Node) playerPao: cc.Node = null;\r\n    @property(cc.Node) followNode: cc.Node = null;\r\n\r\n    // attr\r\n    keyCodeMap: { [key: number]: boolean } = {}\r\n    curKey: number = -1\r\n    directionY: number = 0;\r\n\r\n    playerLogic: PlayerLogic = null;\r\n\r\n    zidanNodes: cc.NodePool = null;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDonw, this)\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this)\r\n\r\n        // init\r\n        this.playerLogic = new PlayerLogic(this)\r\n        this.zidanNodes = new cc.NodePool(Zidan);\r\n        for (let i = 0; i < 10; ++i) {\r\n            let zidanNode = cc.instantiate(this.playerZidanPre)\r\n            this.zidanNodes.put(zidanNode)\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDonw, this)\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this)\r\n    }\r\n\r\n    onEnable() {\r\n        cc.director.getCollisionManager().enabled = true\r\n        // cc.director.getCollisionManager().enabledDrawBoundingBox = true\r\n        // cc.director.getCollisionManager().enabledDebugDraw = true\r\n    }\r\n\r\n    onDisable() {\r\n        cc.director.getCollisionManager().enabled = false\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false\r\n        cc.director.getCollisionManager().enabledDebugDraw = false\r\n    }\r\n\r\n    onCollisionEnter(other, self) {\r\n        let selfAabb = self.world.aabb;\r\n        let otherAabb = other.world.aabb;\r\n        cc.log(other)\r\n        if (cc.Intersection.rectRect(selfAabb, otherAabb)) {\r\n            // `if (this.directX < 0 && (selfPreAabb.xMax > otherPreAabb.xMax)) {\r\n            //     this.node.x = otherPreAabb.xMax + selfPreAabb.width / 2 - this.node.parent.x\r\n            //     this.collisionX = -1;\r\n            // } else if (this.directX > 0 && (selfPreAabb.xMin < otherPreAabb.xMin)) {\r\n            //     this.node.x = otherPreAabb.xMax - selfPreAabb.width / 2 - this.node.parent.x\r\n            //     this.collisionX = 1;\r\n            // }`\r\n        }\r\n    }\r\n\r\n    onCollisionExit() {\r\n\r\n    }\r\n\r\n    onKeyDonw(event) {\r\n        let codeType = event.keyCode\r\n        switch (codeType) {\r\n            case cc.KEY.up:\r\n            case cc.KEY.w:\r\n                {\r\n                    this.directionY = 1;\r\n                }\r\n                break;\r\n            case cc.KEY.down:\r\n            case cc.KEY.s:\r\n                {\r\n                    this.directionY = -1;\r\n                }\r\n                break;\r\n            case cc.KEY.left:\r\n            case cc.KEY.a:\r\n                {\r\n                    this.keyCodeMap[cc.KEY.a] = true\r\n                    this.curKey = cc.KEY.a\r\n                }\r\n                break;\r\n            case cc.KEY.right:\r\n            case cc.KEY.d:\r\n                {\r\n                    this.keyCodeMap[cc.KEY.d] = true\r\n                    this.curKey = cc.KEY.d\r\n                }\r\n                break;\r\n            case cc.KEY.j:\r\n            case cc.KEY.space:\r\n                {\r\n                    this.keyCodeMap[cc.KEY.j] = true\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        // cc.log(this.node.position)\r\n    }\r\n\r\n    onKeyUp(event) {\r\n        let codeType = event.keyCode\r\n        switch (codeType) {\r\n            case cc.KEY.up:\r\n            case cc.KEY.w:\r\n                {\r\n                    this.directionY = 0\r\n                }\r\n                break;\r\n            case cc.KEY.down:\r\n            case cc.KEY.s:\r\n                {\r\n                    this.directionY = 0\r\n                }\r\n                break;\r\n            case cc.KEY.left:\r\n            case cc.KEY.a:\r\n                {\r\n                    this.keyCodeMap[cc.KEY.a] = false\r\n                }\r\n                break;\r\n            case cc.KEY.right:\r\n            case cc.KEY.d:\r\n                {\r\n                    this.keyCodeMap[cc.KEY.d] = false\r\n                }\r\n                break;\r\n            case cc.KEY.j:\r\n            case cc.KEY.space:\r\n                {\r\n                    this.keyCodeMap[cc.KEY.j] = false\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getKeyPress(keyCode) {\r\n        return this.keyCodeMap[keyCode]\r\n    }\r\n\r\n    update(dt) {\r\n        // 移动\r\n        if (this.keyCodeMap[cc.KEY.a] && this.keyCodeMap[cc.KEY.d]) {\r\n            if (this.curKey == cc.KEY.a) {\r\n                if (this.getKeyPress(cc.KEY.a)) {\r\n                    this.node.x -= this.playerLogic.moveSpeed * dt;\r\n                } else {\r\n                    this.node.x += this.playerLogic.moveSpeed * dt;\r\n                }\r\n            } else if (this.curKey == cc.KEY.d) {\r\n                if (this.getKeyPress(cc.KEY.d)) {\r\n                    this.node.x += this.playerLogic.moveSpeed * dt;\r\n                } else {\r\n                    this.node.x -= this.playerLogic.moveSpeed * dt;\r\n                }\r\n            }\r\n        } else {\r\n            if (this.getKeyPress(cc.KEY.a)) {\r\n                this.node.x -= this.playerLogic.moveSpeed * dt;\r\n            } else if (this.getKeyPress(cc.KEY.d)) {\r\n                this.node.x += this.playerLogic.moveSpeed * dt;\r\n            }\r\n        }\r\n\r\n        this.node.y += this.playerLogic.moveSpeed * dt * this.directionY;\r\n\r\n        if (this.followNode.getPositionX() + this.node.width / 2. - this.node.getPositionX() >= 565) {\r\n            this.node.x = this.followNode.getPositionX() - 565 + this.node.width / 2.\r\n        } else if (this.node.getPositionX() + this.node.width / 2. - this.followNode.getPositionX() >= 565) {\r\n            this.node.x = this.followNode.getPositionX() + 565 - this.node.width / 2.\r\n        }\r\n\r\n        if (this.followNode.getPositionY() + this.node.height / 2. - this.node.getPositionY() >= 320) {\r\n            this.node.y = this.followNode.getPositionY() - 320 + this.node.height / 2.\r\n        } else if (this.node.getPositionY() + this.node.height / 2. - this.followNode.getPositionY() >= 320) {\r\n            this.node.y = this.followNode.getPositionY() + 320 - this.node.height / 2.\r\n        }\r\n\r\n        // 发射子弹\r\n        this.playerLogic.zidanAddTime += dt\r\n        if (this.keyCodeMap[cc.KEY.j]) {\r\n            if (this.playerLogic.zidanAddTime > this.playerLogic.zidanGapTime &&\r\n                this.playerLogic.zidanCurNum < this.playerLogic.zidanMaxNum) {\r\n                AudioManager.instance.playEffectByType(AudioType.PLYAER_ZIDAN)\r\n                let zidan = this.getZidan();\r\n                let worldPos = this.node.convertToWorldSpaceAR(this.playerPao.position)\r\n                let pos = this.node.parent.convertToNodeSpaceAR(worldPos)\r\n                zidan.parent = this.node.parent;\r\n                zidan.getComponent(Zidan).init(pos)\r\n                zidan.getComponent(Zidan).setPutCallBack(() => {\r\n                    this.playerLogic.zidanCurNum--\r\n                    this.putZidan(zidan)\r\n                })\r\n                this.playerLogic.zidanAddTime = 0\r\n                this.playerLogic.zidanCurNum++\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // nodePool\r\n    getZidan(): cc.Node {\r\n        let zidan: cc.Node\r\n        if (this.zidanNodes.size() <= 0) {\r\n            let zidanNode = cc.instantiate(this.playerZidanPre)\r\n            this.zidanNodes.put(zidanNode)\r\n        }\r\n\r\n        zidan = this.zidanNodes.get()\r\n\r\n        return zidan\r\n    }\r\n\r\n    putZidan(zidan: cc.Node) {\r\n        if (zidan) {\r\n            this.zidanNodes.put(zidan)\r\n        }\r\n    }\r\n}\r\n"]}