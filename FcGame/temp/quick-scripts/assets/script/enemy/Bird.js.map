{"version":3,"sources":["Bird.ts"],"names":[],"mappings":";;;;;AAAA,yCAAoC;AACpC,2CAAsC;AAEhC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAkC,wBAAS;IAD3C;QAAA,qEA2BC;QAxBG,eAAS,GAAW,CAAC,GAAG,CAAA;;IAwB5B,CAAC;IAtBG,oBAAK,GAAL;QACI,IAAI,MAAM,GAAG,EAAE,CAAA;QACf,IAAI,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;QACzD,IAAI,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACxD,IAAI,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACrB,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;IAC5C,CAAC;IAED,qBAAM,GAAN,UAAO,EAAE;IACT,CAAC;IAED,+BAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QACxB,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;QACnB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,aAAa,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;YACpE,oBAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC3C,CAAC;IACL,CAAC;IAzBgB,IAAI;QADxB,OAAO;OACa,IAAI,CA0BxB;IAAD,WAAC;CA1BD,AA0BC,CA1BiC,mBAAS,GA0B1C;kBA1BoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\enemy","sourcesContent":["import EnemyBase from \"./EnemyBase\";\r\nimport EnemySpawn from \"./EnemySpawn\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Bird extends EnemyBase {\r\n\r\n    moveSpeed: number = -200\r\n\r\n    start() {\r\n        let actArr = []\r\n        let act1 = cc.moveBy(0.5, cc.p(this.moveSpeed * 0.1, 25))\r\n        let act2 = cc.moveBy(1, cc.p(this.moveSpeed * 0.2, -50))\r\n        let act3 = cc.moveBy(1, cc.p(this.moveSpeed * 0.2, 50))\r\n        actArr.push(act1)\r\n        for (let i = 0; i < 10; i++) {\r\n            actArr.push(act2)\r\n            actArr.push(act3)\r\n        }\r\n        this.node.runAction(cc.sequence(actArr))\r\n    }\r\n\r\n    update(dt) {\r\n    }\r\n\r\n    onCollisionEnter(other, self) {\r\n        cc.log(self, other)\r\n        if (other.node.group == 'playerzidan' || other.node.group == 'player') {\r\n            EnemySpawn.instance.putEnemy(this.node)\r\n        }\r\n    }\r\n}\r\n"]}