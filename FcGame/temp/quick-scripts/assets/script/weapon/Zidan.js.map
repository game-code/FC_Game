{"version":3,"sources":["Zidan.ts"],"names":[],"mappings":";;;;;AACM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAmC,yBAAY;IAD/C;QAAA,qEAwCC;QArCG,WAAK,GAAW,GAAG,CAAA;QACnB,wBAAwB;QACxB,kBAAY,GAAe,IAAI,CAAA;;QAkC/B,kBAAkB;IACtB,CAAC;IAjCG,sBAAM,GAAN,cAAW,CAAC;IAEZ,oBAAI,GAAJ,UAAK,GAAY;QAAjB,iBAYC;QAXG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAA;QACxB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;QACvB,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAA;QAC5B,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAA;QAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;QACnD,IAAI,CAAC,YAAY,CAAC;YACd,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,YAAY,EAAE,CAAA;gBACnB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAA;YAC5B,CAAC;QACL,CAAC,EAAE,IAAI,CAAC,CAAA;IACZ,CAAC;IAED,8BAAc,GAAd,UAAe,WAAuB;QAClC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAA;IACnC,CAAC;IAED,gCAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QACxB,IAAI,CAAC,sBAAsB,EAAE,CAAA;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,EAAE,CAAA;YACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;QAC5B,CAAC;IACL,CAAC;IAED,+BAAe,GAAf,UAAgB,KAAK,EAAE,IAAI;IAE3B,CAAC;IApCgB,KAAK;QADzB,OAAO;OACa,KAAK,CAuCzB;IAAD,YAAC;CAvCD,AAuCC,CAvCkC,EAAE,CAAC,SAAS,GAuC9C;kBAvCoB,KAAK","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\weapon","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Zidan extends cc.Component {\r\n\r\n    speed: number = 500\r\n    // LIFE-CYCLE CALLBACKS:\r\n    _putCallBack: () => void = null\r\n\r\n    onLoad() { }\r\n\r\n    init(pos: cc.Vec2) {\r\n        this.node.position = pos\r\n        this.node.active = true\r\n        let time = 1130 / this.speed\r\n        this.node.stopAllActions()\r\n        this.node.runAction(cc.moveBy(time, cc.p(1130, 0)))\r\n        this.scheduleOnce(() => {\r\n            if (this._putCallBack) {\r\n                this._putCallBack()\r\n                this._putCallBack = null\r\n            }\r\n        }, time)\r\n    }\r\n\r\n    setPutCallBack(putCallBack: () => void) {\r\n        this._putCallBack = putCallBack\r\n    }\r\n\r\n    onCollisionEnter(other, self) {\r\n        this.unscheduleAllCallbacks()\r\n        if (this._putCallBack) {\r\n            this._putCallBack()\r\n            this._putCallBack = null\r\n        }\r\n    }\r\n\r\n    onCollisionExit(other, self) {\r\n\r\n    }\r\n\r\n    // update (dt) {},\r\n}\r\n"]}