{"version":3,"sources":["AudioManager.ts"],"names":[],"mappings":";;;;;AAAA,mCAAqC;AAE/B,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAA0C,gCAAY;IADtD;QAAA,qEAwEC;QApEG,WAAK,GAAa,IAAI,CAAC;QAEC,aAAO,GAAiB,IAAI,CAAA;QAC5B,uBAAiB,GAAiB,IAAI,CAAA;QACtC,uBAAiB,GAAiB,IAAI,CAAA;QAEtC,WAAK,GAAiB,IAAI,CAAA;QAGlD,wBAAwB;QACxB,eAAS,GAAW,CAAC,CAAC,CAAA;;QAyDtB,kBAAkB;IACtB,CAAC;qBAvEoB,YAAY;IAe7B,6BAAM,GAAN;QACI,cAAY,CAAC,QAAQ,GAAG,IAAI,CAAA;QAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;QAC5B,yCAAyC;QACzC,mDAAmD;QACnD,4BAA4B;QAC5B,6CAA6C;QAC7C,WAAW;IACf,CAAC;IAED,uCAAgB,GAAhB,UAAiB,IAAe;QAC5B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,KAAK,kBAAS,CAAC,YAAY;gBACvB,CAAC;oBACG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;gBAC/B,CAAC;gBACD,KAAK,CAAC;YACV,KAAK,kBAAS,CAAC,UAAU;gBACrB,CAAC;gBAED,CAAC;gBACD,KAAK,CAAC;YACV,KAAK,kBAAS,CAAC,WAAW;gBACtB,CAAC;gBAED,CAAC;gBACD,KAAK,CAAC;QACd,CAAC;IACL,CAAC;IAED,oCAAa,GAAb;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;IAC1C,CAAC;IAED,gCAAS,GAAT,UAAU,IAAS;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QACvC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;IACvD,CAAC;IAED,uCAAgB,GAAhB,UAAiB,EAAU;QACvB,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;IACzC,CAAC;IAED,iCAAU,GAAV,UAAW,IAAS,EAAE,MAAuB;QAAvB,uBAAA,EAAA,cAAuB;QACzC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;IAC/C,CAAC;IAED,iCAAU,GAAV,UAAW,EAAU;QACjB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IAC3B,CAAC;IAED,mCAAY,GAAZ,UAAa,EAAU;QACnB,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;IAC5B,CAAC;IA1DM,qBAAQ,GAAiB,IAAI,CAAA;IARpC;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;+CACI;IAEC;QAAvB,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;iDAA6B;IAC5B;QAAvB,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;2DAAuC;IACtC;QAAvB,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;2DAAuC;IAEtC;QAAvB,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;+CAA2B;IATjC,YAAY;QADhC,OAAO;OACa,YAAY,CAuEhC;IAAD,mBAAC;;CAvED,AAuEC,CAvEyC,EAAE,CAAC,SAAS,GAuErD;kBAvEoB,YAAY","file":"","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["import { AudioType } from \"./Config\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AudioManager extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property(cc.AudioClip) bgMusic: cc.AudioClip = null\r\n    @property(cc.AudioClip) jqingEnterBgMusic: cc.AudioClip = null\r\n    @property(cc.AudioClip) jqingStartBgMusic: cc.AudioClip = null\r\n\r\n    @property(cc.AudioClip) zidan: cc.AudioClip = null\r\n\r\n    static instance: AudioManager = null\r\n    // LIFE-CYCLE CALLBACKS:\r\n    bgMusicId: number = -1\r\n\r\n    onLoad() {\r\n        AudioManager.instance = this\r\n        this.playMusic(this.bgMusic)\r\n        // this.playMusic(this.jqingEnterBgMusic)\r\n        // let time = this.getMusicDuration(this.bgMusicId)\r\n        // this.scheduleOnce(() => {\r\n        //     this.playMusic(this.jqingStartBgMusic)\r\n        // }, time)\r\n    }\r\n\r\n    playEffectByType(type: AudioType) {\r\n        switch (type) {\r\n            case AudioType.PLYAER_ZIDAN:\r\n                {\r\n                    this.playEffect(this.zidan)\r\n                }\r\n                break;\r\n            case AudioType.PLYAER_GET:\r\n                {\r\n\r\n                }\r\n                break;\r\n            case AudioType.PLYAER_DEAD:\r\n                {\r\n\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    playBossMusic() {\r\n        this.playMusic(this.jqingEnterBgMusic)\r\n    }\r\n\r\n    playMusic(path: any) {\r\n        if (this.bgMusicId != -1)\r\n            cc.audioEngine.stop(this.bgMusicId)\r\n        this.bgMusicId = cc.audioEngine.play(path, true, 1)\r\n    }\r\n\r\n    getMusicDuration(id: number) {\r\n        return cc.audioEngine.getDuration(id)\r\n    }\r\n\r\n    playEffect(path: any, isloop: boolean = false): number {\r\n        return cc.audioEngine.play(path, isloop, 1)\r\n    }\r\n\r\n    stopEffect(id: number) {\r\n        cc.audioEngine.stop(id)\r\n    }\r\n\r\n    stopAllAudio(id: number) {\r\n        cc.audioEngine.stopAll()\r\n    }\r\n    // update (dt) {},\r\n}\r\n"]}